{
    "semantics": "mealy",
    "inputs": ["req1", "req2", "req3", "chan1", "chan2", "chan3"],
    "outputs": ["com1", "com2", "com3", "out1", "out2", "out3"],
    "assumptions": [
        "G ((chan1 <-> com1) && (chan2 <-> com2)) || G ((chan1 <-> com1) && (chan3 <-> com3)) || G ((chan2 <-> com2) && (chan3 <-> com3))"
    ],
    "guarantees": [
        "G ( (out1 <-> out2) && (out2 <-> out3) )",
    ],
    "hyper": [
        "forall pi1 pi2. ( !( (req1[pi1] <-> req1[pi2]) && (chan2[pi1] <-> chan2[pi2]) && (chan3[pi1] <-> chan3[pi2]) ) R ((com1[pi1] <-> com1[pi2]) && (out1[pi1] <-> out1[pi2])) )",
        "forall pi1 pi2. ( !( (req2[pi1] <-> req2[pi2]) && (chan1[pi1] <-> chan1[pi2]) && (chan3[pi1] <-> chan3[pi2]) ) R ((com2[pi1] <-> com2[pi2]) && (out2[pi1] <-> out2[pi2])) )",
        "forall pi1 pi2. ( !( (req3[pi1] <-> req3[pi2]) && (chan1[pi1] <-> chan1[pi2]) && (chan2[pi1] <-> chan2[pi2]) ) R ((com3[pi1] <-> com3[pi2]) && (out3[pi1] <-> out3[pi2])) )",
    ]
}

